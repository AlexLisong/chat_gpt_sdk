// Mocks generated by Mockito 5.4.0 from annotations
// in chat_gpt_sdk/test/chat_gpt_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:chat_gpt_sdk/chat_gpt_sdk.dart' as _i6;
import 'package:chat_gpt_sdk/src/audio.dart' as _i4;
import 'package:chat_gpt_sdk/src/edit.dart' as _i2;
import 'package:chat_gpt_sdk/src/embedding.dart' as _i3;
import 'package:chat_gpt_sdk/src/file.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEdit_0 extends _i1.SmartFake implements _i2.Edit {
  _FakeEdit_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmbedding_1 extends _i1.SmartFake implements _i3.Embedding {
  _FakeEmbedding_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudio_2 extends _i1.SmartFake implements _i4.Audio {
  _FakeAudio_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOpenAIFile_3 extends _i1.SmartFake implements _i5.OpenAIFile {
  _FakeOpenAIFile_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOpenAI_4 extends _i1.SmartFake implements _i6.OpenAI {
  _FakeOpenAI_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAiModel_5 extends _i1.SmartFake implements _i6.AiModel {
  _FakeAiModel_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEngineModel_6 extends _i1.SmartFake implements _i6.EngineModel {
  _FakeEngineModel_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OpenAI].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAI extends _i1.Mock implements _i6.OpenAI {
  MockOpenAI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Edit get editor => (super.noSuchMethod(
        Invocation.getter(#editor),
        returnValue: _FakeEdit_0(
          this,
          Invocation.getter(#editor),
        ),
      ) as _i2.Edit);
  @override
  _i3.Embedding get embed => (super.noSuchMethod(
        Invocation.getter(#embed),
        returnValue: _FakeEmbedding_1(
          this,
          Invocation.getter(#embed),
        ),
      ) as _i3.Embedding);
  @override
  _i4.Audio get audio => (super.noSuchMethod(
        Invocation.getter(#audio),
        returnValue: _FakeAudio_2(
          this,
          Invocation.getter(#audio),
        ),
      ) as _i4.Audio);
  @override
  _i5.OpenAIFile get file => (super.noSuchMethod(
        Invocation.getter(#file),
        returnValue: _FakeOpenAIFile_3(
          this,
          Invocation.getter(#file),
        ),
      ) as _i5.OpenAIFile);
  @override
  void setToken(String? token) => super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i6.OpenAI build({
    String? token,
    _i6.HttpSetup? baseOption,
    bool? isLog = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
          {
            #token: token,
            #baseOption: baseOption,
            #isLog: isLog,
          },
        ),
        returnValue: _FakeOpenAI_4(
          this,
          Invocation.method(
            #build,
            [],
            {
              #token: token,
              #baseOption: baseOption,
              #isLog: isLog,
            },
          ),
        ),
      ) as _i6.OpenAI);
  @override
  _i7.Future<_i6.AiModel> listModel() => (super.noSuchMethod(
        Invocation.method(
          #listModel,
          [],
        ),
        returnValue: _i7.Future<_i6.AiModel>.value(_FakeAiModel_5(
          this,
          Invocation.method(
            #listModel,
            [],
          ),
        )),
      ) as _i7.Future<_i6.AiModel>);
  @override
  _i7.Future<_i6.EngineModel> listEngine() => (super.noSuchMethod(
        Invocation.method(
          #listEngine,
          [],
        ),
        returnValue: _i7.Future<_i6.EngineModel>.value(_FakeEngineModel_6(
          this,
          Invocation.method(
            #listEngine,
            [],
          ),
        )),
      ) as _i7.Future<_i6.EngineModel>);
  @override
  _i7.Future<_i6.CTResponse?> onCompletion(
          {required _i6.CompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCompletion,
          [],
          {#request: request},
        ),
        returnValue: _i7.Future<_i6.CTResponse?>.value(),
      ) as _i7.Future<_i6.CTResponse?>);
  @override
  _i7.Stream<_i6.CTResponse?> onCompletionStream(
          {required _i6.CompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCompletionStream,
          [],
          {#request: request},
        ),
        returnValue: _i7.Stream<_i6.CTResponse?>.empty(),
      ) as _i7.Stream<_i6.CTResponse?>);
  @override
  _i7.Future<_i6.ChatCTResponse?> onChatCompletion(
          {required _i6.ChatCompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChatCompletion,
          [],
          {#request: request},
        ),
        returnValue: _i7.Future<_i6.ChatCTResponse?>.value(),
      ) as _i7.Future<_i6.ChatCTResponse?>);
  @override
  _i7.Stream<_i6.ChatCTResponse?> onChatCompletionStream(
          {required _i6.ChatCompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChatCompletionStream,
          [],
          {#request: request},
        ),
        returnValue: _i7.Stream<_i6.ChatCTResponse?>.empty(),
      ) as _i7.Stream<_i6.ChatCTResponse?>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Stream<_i6.GenImgResponse> generateImageStream(
          _i6.GenerateImage? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateImageStream,
          [request],
        ),
        returnValue: _i7.Stream<_i6.GenImgResponse>.empty(),
      ) as _i7.Stream<_i6.GenImgResponse>);
  @override
  void genImgClose() => super.noSuchMethod(
        Invocation.method(
          #genImgClose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<_i6.GenImgResponse?> generateImage(_i6.GenerateImage? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateImage,
          [request],
        ),
        returnValue: _i7.Future<_i6.GenImgResponse?>.value(),
      ) as _i7.Future<_i6.GenImgResponse?>);
  @override
  _i7.Stream<_i6.ChatCTResponse> onChatCompletionSSE(
          {required _i6.ChatCompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChatCompletionSSE,
          [],
          {#request: request},
        ),
        returnValue: _i7.Stream<_i6.ChatCTResponse>.empty(),
      ) as _i7.Stream<_i6.ChatCTResponse>);
  @override
  _i7.Stream<_i6.CTResponse> onCompletionSSE(
          {required _i6.CompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCompletionSSE,
          [],
          {#request: request},
        ),
        returnValue: _i7.Stream<_i6.CTResponse>.empty(),
      ) as _i7.Stream<_i6.CTResponse>);
  @override
  void cancelAIGenerate() => super.noSuchMethod(
        Invocation.method(
          #cancelAIGenerate,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i8.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);
  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);
  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);
  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);
  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);
  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);
  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);
  @override
  _i7.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
