// Mocks generated by Mockito 5.4.0 from annotations
// in chat_gpt_sdk/test/chat_gpt_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:chat_gpt_sdk/src/audio.dart' as _i4;
import 'package:chat_gpt_sdk/src/edit.dart' as _i2;
import 'package:chat_gpt_sdk/src/embedding.dart' as _i3;
import 'package:chat_gpt_sdk/src/file.dart' as _i5;
import 'package:chat_gpt_sdk/src/fine_tuned.dart' as _i6;
import 'package:chat_gpt_sdk/src/model/chat_complete/request/chat_complete_text.dart'
    as _i16;
import 'package:chat_gpt_sdk/src/model/chat_complete/response/chat_ct_response.dart'
    as _i15;
import 'package:chat_gpt_sdk/src/model/chat_complete/response/chat_response_sse.dart'
    as _i19;
import 'package:chat_gpt_sdk/src/model/client/http_setup.dart' as _i11;
import 'package:chat_gpt_sdk/src/model/complete_text/request/complete_text.dart'
    as _i14;
import 'package:chat_gpt_sdk/src/model/complete_text/response/complete_response.dart'
    as _i13;
import 'package:chat_gpt_sdk/src/model/gen_image/request/generate_image.dart'
    as _i18;
import 'package:chat_gpt_sdk/src/model/gen_image/response/gen_img_response.dart'
    as _i17;
import 'package:chat_gpt_sdk/src/model/openai_engine/engine_model.dart' as _i10;
import 'package:chat_gpt_sdk/src/model/openai_model/openai_models.dart' as _i9;
import 'package:chat_gpt_sdk/src/moderations.dart' as _i7;
import 'package:chat_gpt_sdk/src/openai.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEdit_0 extends _i1.SmartFake implements _i2.Edit {
  _FakeEdit_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmbedding_1 extends _i1.SmartFake implements _i3.Embedding {
  _FakeEmbedding_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudio_2 extends _i1.SmartFake implements _i4.Audio {
  _FakeAudio_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOpenAIFile_3 extends _i1.SmartFake implements _i5.OpenAIFile {
  _FakeOpenAIFile_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFineTune_4 extends _i1.SmartFake implements _i6.FineTune {
  _FakeFineTune_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeModeration_5 extends _i1.SmartFake implements _i7.Moderation {
  _FakeModeration_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOpenAI_6 extends _i1.SmartFake implements _i8.OpenAI {
  _FakeOpenAI_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAiModel_7 extends _i1.SmartFake implements _i9.AiModel {
  _FakeAiModel_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEngineModel_8 extends _i1.SmartFake implements _i10.EngineModel {
  _FakeEngineModel_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OpenAI].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAI extends _i1.Mock implements _i8.OpenAI {
  @override
  String get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i2.Edit get editor => (super.noSuchMethod(
        Invocation.getter(#editor),
        returnValue: _FakeEdit_0(
          this,
          Invocation.getter(#editor),
        ),
        returnValueForMissingStub: _FakeEdit_0(
          this,
          Invocation.getter(#editor),
        ),
      ) as _i2.Edit);
  @override
  _i3.Embedding get embed => (super.noSuchMethod(
        Invocation.getter(#embed),
        returnValue: _FakeEmbedding_1(
          this,
          Invocation.getter(#embed),
        ),
        returnValueForMissingStub: _FakeEmbedding_1(
          this,
          Invocation.getter(#embed),
        ),
      ) as _i3.Embedding);
  @override
  _i4.Audio get audio => (super.noSuchMethod(
        Invocation.getter(#audio),
        returnValue: _FakeAudio_2(
          this,
          Invocation.getter(#audio),
        ),
        returnValueForMissingStub: _FakeAudio_2(
          this,
          Invocation.getter(#audio),
        ),
      ) as _i4.Audio);
  @override
  _i5.OpenAIFile get file => (super.noSuchMethod(
        Invocation.getter(#file),
        returnValue: _FakeOpenAIFile_3(
          this,
          Invocation.getter(#file),
        ),
        returnValueForMissingStub: _FakeOpenAIFile_3(
          this,
          Invocation.getter(#file),
        ),
      ) as _i5.OpenAIFile);
  @override
  _i6.FineTune get fineTune => (super.noSuchMethod(
        Invocation.getter(#fineTune),
        returnValue: _FakeFineTune_4(
          this,
          Invocation.getter(#fineTune),
        ),
        returnValueForMissingStub: _FakeFineTune_4(
          this,
          Invocation.getter(#fineTune),
        ),
      ) as _i6.FineTune);
  @override
  _i7.Moderation get moderation => (super.noSuchMethod(
        Invocation.getter(#moderation),
        returnValue: _FakeModeration_5(
          this,
          Invocation.getter(#moderation),
        ),
        returnValueForMissingStub: _FakeModeration_5(
          this,
          Invocation.getter(#moderation),
        ),
      ) as _i7.Moderation);
  @override
  void setToken(String? token) => super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.OpenAI build({
    String? token,
    _i11.HttpSetup? baseOption,
    bool? isLog = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
          {
            #token: token,
            #baseOption: baseOption,
            #isLog: isLog,
          },
        ),
        returnValue: _FakeOpenAI_6(
          this,
          Invocation.method(
            #build,
            [],
            {
              #token: token,
              #baseOption: baseOption,
              #isLog: isLog,
            },
          ),
        ),
        returnValueForMissingStub: _FakeOpenAI_6(
          this,
          Invocation.method(
            #build,
            [],
            {
              #token: token,
              #baseOption: baseOption,
              #isLog: isLog,
            },
          ),
        ),
      ) as _i8.OpenAI);
  @override
  _i12.Future<_i9.AiModel> listModel() => (super.noSuchMethod(
        Invocation.method(
          #listModel,
          [],
        ),
        returnValue: _i12.Future<_i9.AiModel>.value(_FakeAiModel_7(
          this,
          Invocation.method(
            #listModel,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i9.AiModel>.value(_FakeAiModel_7(
          this,
          Invocation.method(
            #listModel,
            [],
          ),
        )),
      ) as _i12.Future<_i9.AiModel>);
  @override
  _i12.Future<_i10.EngineModel> listEngine() => (super.noSuchMethod(
        Invocation.method(
          #listEngine,
          [],
        ),
        returnValue: _i12.Future<_i10.EngineModel>.value(_FakeEngineModel_8(
          this,
          Invocation.method(
            #listEngine,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i10.EngineModel>.value(_FakeEngineModel_8(
          this,
          Invocation.method(
            #listEngine,
            [],
          ),
        )),
      ) as _i12.Future<_i10.EngineModel>);
  @override
  _i12.Future<_i13.CTResponse?> onCompletion(
          {required _i14.CompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCompletion,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i13.CTResponse?>.value(),
        returnValueForMissingStub: _i12.Future<_i13.CTResponse?>.value(),
      ) as _i12.Future<_i13.CTResponse?>);
  @override
  _i12.Future<_i15.ChatCTResponse?> onChatCompletion(
          {required _i16.ChatCompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChatCompletion,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i15.ChatCTResponse?>.value(),
        returnValueForMissingStub: _i12.Future<_i15.ChatCTResponse?>.value(),
      ) as _i12.Future<_i15.ChatCTResponse?>);
  @override
  _i12.Future<_i17.GenImgResponse?> generateImage(
          _i18.GenerateImage? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateImage,
          [request],
        ),
        returnValue: _i12.Future<_i17.GenImgResponse?>.value(),
        returnValueForMissingStub: _i12.Future<_i17.GenImgResponse?>.value(),
      ) as _i12.Future<_i17.GenImgResponse?>);
  @override
  _i12.Stream<_i19.ChatCTResponseSSE> onChatCompletionSSE(
          {required _i16.ChatCompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChatCompletionSSE,
          [],
          {#request: request},
        ),
        returnValue: _i12.Stream<_i19.ChatCTResponseSSE>.empty(),
        returnValueForMissingStub: _i12.Stream<_i19.ChatCTResponseSSE>.empty(),
      ) as _i12.Stream<_i19.ChatCTResponseSSE>);
  @override
  _i12.Stream<_i13.CTResponse> onCompletionSSE(
          {required _i14.CompleteText? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCompletionSSE,
          [],
          {#request: request},
        ),
        returnValue: _i12.Stream<_i13.CTResponse>.empty(),
        returnValueForMissingStub: _i12.Stream<_i13.CTResponse>.empty(),
      ) as _i12.Stream<_i13.CTResponse>);
  @override
  void cancelAIGenerate() => super.noSuchMethod(
        Invocation.method(
          #cancelAIGenerate,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
